#Oracle 연결 설정
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@127.0.0.1:1521/xe
spring.datasource.username=fitlog
spring.datasource.password=1234

#포트번호 설정
server.port=8081

#실행되는 쿼리문을 콘솔에 출력
spring.jpa.properties.hibernate.show_sql=true

#콘솔창에 출력되는 쿼리를 가독성 좋게 포맷팅하여 출력함
spring.jpa.properties.hibernate.format_sql=true

#쿼리에 출력되는 물음표에 대한 내용을 볼 수 있게 해줌
logging.level.org.hibernate.type.descriptor.sql=trace

#데이터베이스 초기화 전략 설정
#none : 사용하지 않음, create : 기본 테이블 삭제 후 테이블 생성, 
#create-drop : 기존 테이블 삭제 후 테이블을 생성하고 종료시점에 테이블 삭제, 
#update : 변경된 스키마 적용,
#validate : 엔티티와 테이블의 정상 매핑 확인용
spring.jpa.hibernate.ddl-auto=validate
#데이터베이스의 방언 설정
​spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect

spring.devtools.restart.enabled=true 
spring.devtools.livereload.enabled=true
spring.thymeleaf.cache=false

#데이터값 검증
#유효성 검사를 자동으로 활성화하도록 설정
spring.mvc.validate-on-bind=true
#조인 작성시 유효성 검사를 활성화
spring.mvc.validate-on-explicit-join=true

#파일 한 개당 최대 사이즈
spring.servlet.multipart.max-file-size=20MB

#한 번의 요청에 대한 최대 파일 크기
spring.servlet.multipart.max-request-size = 100MB

#이미지 업로드 경로
itemImgLocation=D:/fitlog/item

#리소스 업로드 경로
uploadPath=file:///D:/fitlog/

#기본 batch size 설정
#batch : 한번의 쿼리로 여러개의 엔티티를 가져오는 방식
#default_batch_fetch_size : Hibernate에서 한번에 가져올 엔티티의 수를 설정
# 쿼리의 실행 횟수를 줄일 수 있고 성능을 향상시킬 수 있음.
spring.jpa.properties.hibernate.default_batch_fetch_size=1000
